{"version":3,"file":"static/js/156.4e3c59b3.chunk.js","mappings":"gPAIaA,EAAaC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oCAItBC,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,uG,2BCkCtC,EAnCiB,WACf,IAAAI,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBG,GAAWC,EAAAA,EAAAA,MAajB,OAZAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJV,EAAkBU,EAASC,KAAKC,QAClC,IACCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,IAC7BG,SAAQ,WACPb,GAAa,EACf,GACJ,GAAG,IAEID,GACLe,EAAAA,EAAAA,KAACC,EAAAA,EAAO,KAERD,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAC9B,EAAU,CAAAgC,SACRrB,EAAesB,KAAI,SAAAC,GAClB,OACEJ,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAC1B,EAAU,CAAC+B,GAAE,UAAAC,OAAYF,EAAMG,IAAMC,MAAO,CAAEC,KAAMtB,GAAWe,SAC7DE,EAAMM,SAFFN,EAAMG,GAMnB,OAIR,C","sources":["pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const StyledList = styled.ul`\n  list-style-type: none;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n","import { getTrandingMovies } from 'services/tmdbApi';\nimport { useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\nimport { StyledLink, StyledList } from './HomePage.styled';\nimport { Loading } from 'components/Loading/Loading';\nimport { useLocation } from 'react-router-dom';\n\nconst HomePage = () => {\n  const [trandingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  useEffect(() => {\n    setIsLoading(true);\n    getTrandingMovies()\n      .then(responce => {\n        setTrendingMovies(responce.data.results);\n      })\n      .catch(err => console.log(err))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return isLoading ? (\n    <Loading />\n  ) : (\n    <div>\n      <StyledList>\n        {trandingMovies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <StyledLink to={`movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </StyledLink>\n            </li>\n          );\n        })}\n      </StyledList>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["StyledList","styled","_templateObject","_taggedTemplateLiteral","StyledLink","Link","_templateObject2","_useState","useState","_useState2","_slicedToArray","trandingMovies","setTrendingMovies","_useState3","_useState4","isLoading","setIsLoading","location","useLocation","useEffect","getTrandingMovies","then","responce","data","results","catch","err","console","log","finally","_jsx","Loading","children","map","movie","to","concat","id","state","from","title"],"sourceRoot":""}